{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "User name for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "vmName": {
      "type": "string",
      "metadata": {
        "description": "Name for the Virtual Machine."
      }
    },
    "KEY_DIR": { 
      "type": "string" 
    },
    "az_user": { 
      "type": "string" 
    },
    "az_pass": { 
      "type": "string" 
    },
    "az_tenant": { 
      "type": "string" 
    },
    "virtualNetworkName": {
      "type": "string"
    },
    "subnetName": {
      "type": "string"
    },
    "subnetPrefix": {
      "type": "string"
    },
    "sa_name": { 
      "type": "string"
    },    
    "rg_name": { 
      "type": "string"
    },    
    "domainNameLabel": {
      "type": "string"
    },
    "ORG_SHORT_NAME": {
      "type": "string"
    },
    "ORG_LONG_NAME": {
      "type": "string"
    }
  },
  "variables": {
    "computeResouresApiVersion": "2016-04-30-preview",
    "dataDisk1Name": "[concat(uniquestring(parameters('vmName')), 'datadisk1')]",
    "dataDisk2Name": "[concat(uniquestring(parameters('vmName')), 'datadisk2')]",
    "imagePublisher": "OpenLogic",
    "imageOffer": "CentOS-HPC",
    "imageSku": "7.1",
    "OSDiskName": "[concat(uniquestring(parameters('vmName')), 'osdisk')]",
    "nicName": "[concat(uniquestring(parameters('vmName')), 'nic')]",
    "addressPrefix": "10.0.0.0/16",
    "publicIPAddressName": "[concat(uniquestring(parameters('vmName')), 'publicip')]",
    "publicIPAddressType": "Dynamic",
    "vmSize": "Standard_A2",
    "vnetID": "[resourceId(resourceGroup().name, 'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/', parameters('subnetName'))]",
    "baseUrl": "https://raw.githubusercontent.com/chef-customers/chef-automate-azure/OrchestrationTemplate/",
    "Automate ExtensionScriptFolder": "CustomScripts",
    "Automate ExtensionScriptFileName": "Automate Extension.sh",
    "fqdn-standalone": "[concat(parameters('domainNameLabel'), '.', resourceGroup().location,'.cloudapp.azure.com')]",
    "fqdn-automate": "[concat(parameters('vmName'), '.', resourceGroup().location,'.cloudapp.azure.com')]"
  },
  "resources": [
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[concat(parameters('vmName'))]",
          "fqdn": "[variables('fqdn-automate')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('computeResouresApiVersion')]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('vmName')]",
      "location": "[resourceGroup().location]",
      "tags": {"Tag1": "ManagedVM"},
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "latest"
          },
          "dataDisks": [
            {
              "name": "[variables('dataDisk1Name')]",
              "diskSizeGB": "100",
              "lun": 0,
              "createOption": "Empty"
            },
            {
              "name": "[variables('dataDisk2Name')]",
              "diskSizeGB": "100",
              "lun": 1,
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "name": "AutomateExtension",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2016-03-30",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
          ],
          "tags": {
            "displayName": "extforchefautomate"
          },
          "properties": {
            "publisher": "Microsoft.Azure.Extensions",
            "type": "CustomScript",
            "typeHandlerVersion": "2.0",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": [
                "[concat(variables('baseUrl'),'nestedTemplates/chef_automate_install.sh')]"
              ],
              "commandToExecute": "[concat('echo ', parameters('adminPassword'), ' | sudo -S sh chef_automate_install.sh',' ', variables('fqdn-standalone'), ' ', parameters('ORG_SHORT_NAME'),' ', variables('fqdn-automate'), ' ', parameters('ORG_LONG_NAME'),' ', parameters('KEY_DIR'),' ', parameters('sa_name'),' ', parameters('rg_name'), ' ', parameters('az_user'),' ', parameters('az_pass'),' ', parameters('az_tenant'))]"
            }
          }
        }
      ]
    }
  ]
}