{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
    "parameters": {
        "vmName": { "type": "string" },
        "vmSSName": { "type": "string" },
        "instanceCount": { "type": "string" },
        "adminUsername": { "type": "string" },
        "adminPassword": { "type": "securestring" },
        "resourcePrefix": { "type": "string" },
        "az_user": { "type": "string" },
        "az_pass": { "type": "string" },
        "az_tenant": { "type": "string" },
        "virtualNetworkName": {
          "type": "string"
        },
        "subnetName": {
          "type": "string"
        },
        "subnetPrefix": {
          "type": "string"
        }
    },
  "variables": {
    "dnsName1": "[concat(parameters('resourcePrefix'),'dn1')]",
    "dnsName2": "[concat(parameters('resourcePrefix'),'dn2')]",
    "publicIP1": "[concat(parameters('resourcePrefix'),'ip1')]",
    "publicIP2": "[concat(parameters('resourcePrefix'),'ip2')]",
    "loadBalancerName": "[concat(parameters('resourcePrefix'),'lb1')]",
    "nicName": "[concat(parameters('resourcePrefix'),'nc1')]",
    "lbID": "[resourceId('Microsoft.Network/loadBalancers',variables('loadBalancerName'))]",
    "frontEndIPConfigID": "[concat(variables('lbID'),'/frontendIPConfigurations/loadBalancerFrontEnd')]",
    "storageAccountSuffix": [ "a", "g", "m", "s", "y" ],
    "diagnosticsStorageAccountName": "[concat(parameters('resourcePrefix'), 'a')]",
    "accountid": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/', resourceGroup().name,'/providers/','Microsoft.Storage/storageAccounts/', variables('diagnosticsStorageAccountName'))]",
    "wadlogs": "<WadCfg><DiagnosticMonitorConfiguration>",
    "wadperfcounter": "<PerformanceCounters scheduledTransferPeriod=\"PT1M\"><PerformanceCounterConfiguration counterSpecifier=\"\\Processor\\PercentProcessorTime\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU percentage guest OS\" locale=\"en-us\"/></PerformanceCounterConfiguration></PerformanceCounters>",
    "wadcfgxstart": "[concat(variables('wadlogs'),variables('wadperfcounter'),'<Metrics resourceId=\"')]",
    "wadmetricsresourceid": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',resourceGroup().name ,'/providers/','Microsoft.Compute/virtualMachineScaleSets/',parameters('vmssName'))]",
    "wadcfgxend": "[concat('\"><MetricAggregation scheduledTransferPeriod=\"PT1H\"/><MetricAggregation scheduledTransferPeriod=\"PT1M\"/></Metrics></DiagnosticMonitorConfiguration></WadCfg>')]",
    "baseUrl": "https://raw.githubusercontent.com/chef-customers/chef-automate-azure/OrchestrationTemplate/",
    "vnetID": "[resourceId(resourceGroup().name, 'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/', parameters('subnetName'))]"
  },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[concat(parameters('resourcePrefix'), variables('storageAccountSuffix')[copyIndex()])]",
            "apiVersion": "2015-06-15",
            "copy": {
              "name": "storageLoop",
              "count": 5
            },
            "location": "[resourceGroup().location]",
            "properties": { "accountType": "Standard_LRS" }
        },
        {
            "apiVersion": "2016-03-30",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIP1')]",
            "location": "[resourceGroup().location]",
            "properties": {
              "publicIPAllocationMethod": "Dynamic",
              "dnsSettings": {
                "domainNameLabel": "[variables('dnsName1')]"
              }
            }
        },
        {
            "apiVersion": "2016-03-30",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIP2')]",
            "location": "[resourceGroup().location]",
            "properties": {
              "publicIPAllocationMethod": "Dynamic",
              "dnsSettings": {
                "domainNameLabel": "[variables('dnsName2')]"
              }
            }
        },
        {
            "apiVersion": "2015-06-15",
            "name": "[variables('loadBalancerName')]",
            "type": "Microsoft.Network/loadBalancers",
            "location": "[resourceGroup().location]",
            "dependsOn": [
              "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIP1'))]"
            ],
            "properties": {
              "frontendIPConfigurations": [
                {
                  "name": "loadBalancerFrontEnd",
                  "properties": {
                    "publicIPAddress": {
                      "id": "[resourceId('Microsoft.Network/publicIPAddresses/', variables('publicIP1'))]"
                    }
                  }
                }
              ],
              "backendAddressPools": [ { "name": "bepool1" } ],
              "inboundNatPools": [
                {
                  "name": "natpool1",
                  "properties": {
                    "frontendIPConfiguration": {
                      "id": "[variables('frontEndIPConfigID')]"
                    },
                    "protocol": "tcp",
                    "frontendPortRangeStart": 50000,
                    "frontendPortRangeEnd": 50500,
                    "backendPort": 22
                  }
                }
              ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachineScaleSets",
            "apiVersion": "2016-03-30",
            "name": "[parameters('vmSSName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
              "storageLoop",
              "[concat('Microsoft.Network/loadBalancers/', variables('loadBalancerName'))]"
            ],
            "sku": {
              "name": "Standard_A1",
              "tier": "Standard",
              "capacity": "[parameters('instanceCount')]"
            },
            "properties": {
              "upgradePolicy": {
                "mode": "Manual"
              },
              "virtualMachineProfile": {
                "storageProfile": {
                  "osDisk": {
                    "vhdContainers": [
                      "[concat('https://', parameters('resourcePrefix'), variables('storageAccountSuffix')[0],'.blob.core.windows.net/vmss')]",
                      "[concat('https://', parameters('resourcePrefix'), variables('storageAccountSuffix')[1],'.blob.core.windows.net/vmss')]",
                      "[concat('https://', parameters('resourcePrefix'), variables('storageAccountSuffix')[2],'.blob.core.windows.net/vmss')]",
                      "[concat('https://', parameters('resourcePrefix'), variables('storageAccountSuffix')[3],'.blob.core.windows.net/vmss')]",
                      "[concat('https://', parameters('resourcePrefix'), variables('storageAccountSuffix')[4],'.blob.core.windows.net/vmss')]"
                    ],
                    "name": "vmssosdisk",
                    "caching": "ReadOnly",
                    "createOption": "FromImage"
                  },
                  "imageReference": {
                    "publisher": "OpenLogic",
                    "offer": "CentOS",
                    "sku": "7.3",
                    "version": "latest"
                  }
                },
                "osProfile": {
                  "computerNamePrefix": "[parameters('vmSSName')]",
                  "adminUsername": "[parameters('adminUsername')]",
                  "adminPassword": "[parameters('adminPassword')]"
                },
                "networkProfile": {
                  "networkInterfaceConfigurations": [
                    {
                      "name": "networkconfig1",
                      "properties": {
                        "primary": "true",
                        "ipConfigurations": [
                          {
                            "name": "ip1",
                            "properties": {
                              "subnet": {
                                "id": "[variables('subnetRef')]"
                              },
                              "loadBalancerBackendAddressPools": [
                                {
                                  "id": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.Network/loadBalancers/',variables('loadBalancerName'),'/backendAddressPools/bepool1')]"
                                }
                              ],
                              "loadBalancerInboundNatPools": [
                                {
                                  "id": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.Network/loadBalancers/',variables('loadBalancerName'),'/inboundNatPools/natpool1')]"
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                },
                "extensionProfile": {
                  "extensions": [
                    {
                      "name": "LinuxDiagnostic",
                      "properties": {
                        "publisher": "Microsoft.OSTCExtensions",
                        "type": "LinuxDiagnostic",
                        "typeHandlerVersion": "2.1",
                        "autoUpgradeMinorVersion": false,
                        "settings": {
                          "xmlCfg": "[base64(concat(variables('wadcfgxstart'),variables('wadmetricsresourceid'),variables('wadcfgxend')))]",
                          "storageAccount": "[variables('diagnosticsStorageAccountName')]"
                        },
                        "protectedSettings": {
                          "storageAccountName": "[variables('diagnosticsStorageAccountName')]",
                          "storageAccountKey": "[listkeys(variables('accountid'), '2015-06-15').key1]",
                          "storageAccountEndPoint": "https://core.windows.net"
                        }
                      }
                    },
                    {
                      "name": "RunnerScriptExtension",
                      "type": "extensions",
                      "location": "[resourceGroup().location]",
                      "apiVersion": "2016-03-30",
                      "properties": {
                        "publisher": "Microsoft.Azure.Extensions",
                        "type": "CustomScript",
                        "typeHandlerVersion": "2.0",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                          "fileUris": [
                            "[concat(variables('baseUrl'),'nestedTemplates/create_runner.sh')]"
                          ],

                          "commandToExecute": "[concat('echo ', parameters('adminPassword'), ' | sudo -S sh create_runner.sh',' ', parameters('vmName'), ' ', resourceGroup().name,' ', parameters('adminPassword'),' ', parameters('adminUsername'),' ', parameters('az_user'),' ', parameters('az_pass'),' ', parameters('az_tenant'))]"
                        }

                      }
                    }
                  ]
                }
              }
            }
        },
        {
            "type": "Microsoft.Insights/autoscaleSettings",
            "apiVersion": "2015-04-01",
            "name": "[concat(parameters('resourcePrefix'),'as1')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
              "[concat('Microsoft.Compute/virtualMachineScaleSets/',parameters('vmSSName'))]"
            ],
            "properties": {
              "enabled": true,
              "name": "[concat(parameters('resourcePrefix'),'as1')]",
              "profiles": [
                {
                  "name": "Profile1",
                  "capacity": {
                    "minimum": "1",
                    "maximum": "10",
                    "default": "1"
                  },
                  "rules": [
                    {
                      "metricTrigger": {
                        "metricName": "\\Processor\\PercentProcessorTime",
                        "metricNamespace": "",
                        "metricResourceUri": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.Compute/virtualMachineScaleSets/',parameters('vmSSName'))]",
                        "timeGrain": "PT1M",
                        "statistic": "Average",
                        "timeWindow": "PT5M",
                        "timeAggregation": "Average",
                        "operator": "GreaterThan",
                        "threshold": 50.0
                      },
                      "scaleAction": {
                        "direction": "Increase",
                        "type": "ChangeCount",
                        "value": "1",
                        "cooldown": "PT5M"
                      }
                    },
                    {
                      "metricTrigger": {
                        "metricName": "\\Processor\\PercentProcessorTime",
                        "metricNamespace": "",
                        "metricResourceUri": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.Compute/virtualMachineScaleSets/',parameters('vmSSName'))]",
                        "timeGrain": "PT1M",
                        "statistic": "Average",
                        "timeWindow": "PT5M",
                        "timeAggregation": "Average",
                        "operator": "LessThan",
                        "threshold": 25.0
                      },
                      "scaleAction": {
                        "direction": "Decrease",
                        "type": "ChangeCount",
                        "value": "1",
                        "cooldown": "PT5M"
                      }
                    }
                      ]
                    }
                  ],
              "targetResourceUri": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/', resourceGroup().name,'/providers/Microsoft.Compute/virtualMachineScaleSets/',parameters('vmSSName'))]"
            }
        }
    ]
  }